plugins {
    id "com.android.application"
    id "kotlin-android"
    // FlutterFire Configuration
    id 'com.google.gms.google-services'
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = file("${System.getenv('ProjectCommon')}/FlutterStudy/key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    println "Info - load keystorePropertiesFile succeeded."
} else {
    println "`Error - load keystorePropertiesFile failed."
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

apply from: project(':flutter_config').projectDir.getPath() + "/dotenv.gradle"

android {
    namespace = "com.example.flutter_project_team1"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = namespace
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23 // flutter.minSdkVersion.toInteger()
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        manifestPlaceholders += [KAKAO_NATIVE_APP_KEY: project.env.get("KAKAO_NATIVE_APP_KEY")]
    }

    signingConfigs {
        // TODO: 현재 키가 하나 밖에 없다. debug, release 구분 필요.
        debug {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file("${System.getenv('ProjectCommon')}/FlutterStudy/kkul_trip_debug.jks")
            storePassword keystoreProperties['storePassword']
        }

        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file("${System.getenv('ProjectCommon')}/FlutterStudy/kkul_trip_debug.jks")
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        debug {
            // use `flutter run --debug` command.
            signingConfig = signingConfigs.debug

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            // use `flutter run --release` command.
            signingConfig = signingConfigs.release

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        buildConfig = true
    }

    flavorDimensions "app"

    productFlavors{
        dev{
            dimension "app"
            applicationIdSuffix ".dev"
            resValue "string", "app_name", "댕꿀트립DEV"
        }
        prod{
            dimension "app"
            resValue "string", "app_name", "댕꿀트립"
        }
    }
}

flutter {
    source = "../.."
}
